@sirius(iconFolder = "uk.ac.york.aconite.family/icons/")
@namespace(uri="http://www.eclipse.org/sirius/sample/basicfamily", prefix="basicfamily")
package basicfamily;

@sirius.diagram(name = "Relationships")
@sirius.node(name = "Rel Default",~abstract = "true", color = "white", showIcon = "true", childrenPresentation = "List")
@sirius.container(~import = "Rel Default", name = "Person", foregroundColor = "light_green", container = "Relationships")
@sirius.border(~import = "Rel Default", name = "Parent", container =  "Person", sce = "parents")
@sirius.node(~import = "Rel Default", name = "Child", container = "Person", sce = "children")
@sirius.container(~import = "Rel Default", name = "Siblings", proLabelExpression = "Siblings", foregroundColor = "light_yellow", container = "Relationships", showIcon = "false")
@sirius.node(name = "Sibling",  container = "Siblings", sce = "parents.children->excluding(self)", showIcon = "true")
abstract class Person {
	attr String name;
	@sirius.edge(name = "SiblingsEdge", labelExpression = "", color = "gray", container = "Relationships", targetFinderExpression = "aql:self", sourceNode = "Person", targetNode = "Siblings")
	ref Person[*]#parents children;
	ref Person[0..2]#children parents;
	@sirius.edge(creatable = "true", name = "Mother", container = "Persons" , sourceNode = "Man, Woman", reconnectable = "true", labelExpression = "", color = "purple")
	derived ref Woman mother;
	@sirius.edge(~import = "Mother", name = "Father", color = "blue")
	derived ref Man father;
}

@sirius.diagram(name = "Persons")
class Family {
	attr String name;
	@sirius.tool.creation(name = "Men", container = "Man")
	@sirius.tool.creation(name = "Women", container = "Woman")
	val Person[*] members;
}

@sirius.node(name = "Man", container = "Persons", sce = "members", shape = "image", imagePath = "man.svg", borderSize= "0")
class Man extends Person {
}

@sirius.node(~import = "Man", name = "Woman", imagePath = "woman.svg")
class Woman extends Person {
}

